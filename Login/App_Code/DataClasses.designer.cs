#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Data.Linq;
using System.Data.Linq.Mapping;
using System.Linq;
using System.Linq.Expressions;
using System.Reflection;



[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="SolsticeAPI_db")]
public partial class DataClassesDataContext : System.Data.Linq.DataContext
{
	
	private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
	
  #region Extensibility Method Definitions
  partial void OnCreated();
  partial void InsertUser(User instance);
  partial void UpdateUser(User instance);
  partial void DeleteUser(User instance);
  partial void InsertResult(Result instance);
  partial void UpdateResult(Result instance);
  partial void DeleteResult(Result instance);
  partial void InsertAddSubProblem(AddSubProblem instance);
  partial void UpdateAddSubProblem(AddSubProblem instance);
  partial void DeleteAddSubProblem(AddSubProblem instance);
  #endregion
	
	public DataClassesDataContext() : 
			base(global::System.Configuration.ConfigurationManager.ConnectionStrings["SolsticeAPI_dbConnectionString"].ConnectionString, mappingSource)
	{
		OnCreated();
	}
	
	public DataClassesDataContext(string connection) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public DataClassesDataContext(System.Data.IDbConnection connection) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public DataClassesDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public DataClassesDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public System.Data.Linq.Table<User> Users
	{
		get
		{
			return this.GetTable<User>();
		}
	}
	
	public System.Data.Linq.Table<Result> Results
	{
		get
		{
			return this.GetTable<Result>();
		}
	}
	
	public System.Data.Linq.Table<AddSubProblem> AddSubProblems
	{
		get
		{
			return this.GetTable<AddSubProblem>();
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Users")]
public partial class User : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _UserID;
	
	private global::UserType _UserType;
	
	private string _Login;
	
	private string _FirstName;
	
	private string _LastName;
	
	private string _Password;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserIDChanging(int value);
    partial void OnUserIDChanged();
    partial void OnUserTypeChanging(global::UserType value);
    partial void OnUserTypeChanged();
    partial void OnLoginChanging(string value);
    partial void OnLoginChanged();
    partial void OnFirstNameChanging(string value);
    partial void OnFirstNameChanged();
    partial void OnLastNameChanging(string value);
    partial void OnLastNameChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    #endregion
	
	public User()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int UserID
	{
		get
		{
			return this._UserID;
		}
		set
		{
			if ((this._UserID != value))
			{
				this.OnUserIDChanging(value);
				this.SendPropertyChanging();
				this._UserID = value;
				this.SendPropertyChanged("UserID");
				this.OnUserIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserType", DbType="Int NOT NULL", CanBeNull=false)]
	public global::UserType UserType
	{
		get
		{
			return this._UserType;
		}
		set
		{
			if ((this._UserType != value))
			{
				this.OnUserTypeChanging(value);
				this.SendPropertyChanging();
				this._UserType = value;
				this.SendPropertyChanged("UserType");
				this.OnUserTypeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Login", DbType="NVarChar(MAX)")]
	public string Login
	{
		get
		{
			return this._Login;
		}
		set
		{
			if ((this._Login != value))
			{
				this.OnLoginChanging(value);
				this.SendPropertyChanging();
				this._Login = value;
				this.SendPropertyChanged("Login");
				this.OnLoginChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstName", DbType="NVarChar(MAX)")]
	public string FirstName
	{
		get
		{
			return this._FirstName;
		}
		set
		{
			if ((this._FirstName != value))
			{
				this.OnFirstNameChanging(value);
				this.SendPropertyChanging();
				this._FirstName = value;
				this.SendPropertyChanged("FirstName");
				this.OnFirstNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastName", DbType="NVarChar(MAX)")]
	public string LastName
	{
		get
		{
			return this._LastName;
		}
		set
		{
			if ((this._LastName != value))
			{
				this.OnLastNameChanging(value);
				this.SendPropertyChanging();
				this._LastName = value;
				this.SendPropertyChanged("LastName");
				this.OnLastNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="NChar(89)")]
	public string Password
	{
		get
		{
			return this._Password;
		}
		set
		{
			if ((this._Password != value))
			{
				this.OnPasswordChanging(value);
				this.SendPropertyChanging();
				this._Password = value;
				this.SendPropertyChanged("Password");
				this.OnPasswordChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Results")]
public partial class Result : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _ResultID;
	
	private int _StudentID;
	
	private int _ProblemID;
	
	private System.Nullable<int> _Answer;
	
	private int _Level;
	
	private int _Round;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnResultIDChanging(int value);
    partial void OnResultIDChanged();
    partial void OnStudentIDChanging(int value);
    partial void OnStudentIDChanged();
    partial void OnProblemIDChanging(int value);
    partial void OnProblemIDChanged();
    partial void OnAnswerChanging(System.Nullable<int> value);
    partial void OnAnswerChanged();
    partial void OnLevelChanging(int value);
    partial void OnLevelChanged();
    partial void OnRoundChanging(int value);
    partial void OnRoundChanged();
    #endregion
	
	public Result()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResultID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int ResultID
	{
		get
		{
			return this._ResultID;
		}
		set
		{
			if ((this._ResultID != value))
			{
				this.OnResultIDChanging(value);
				this.SendPropertyChanging();
				this._ResultID = value;
				this.SendPropertyChanged("ResultID");
				this.OnResultIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StudentID", DbType="Int NOT NULL")]
	public int StudentID
	{
		get
		{
			return this._StudentID;
		}
		set
		{
			if ((this._StudentID != value))
			{
				this.OnStudentIDChanging(value);
				this.SendPropertyChanging();
				this._StudentID = value;
				this.SendPropertyChanged("StudentID");
				this.OnStudentIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProblemID", DbType="Int NOT NULL")]
	public int ProblemID
	{
		get
		{
			return this._ProblemID;
		}
		set
		{
			if ((this._ProblemID != value))
			{
				this.OnProblemIDChanging(value);
				this.SendPropertyChanging();
				this._ProblemID = value;
				this.SendPropertyChanged("ProblemID");
				this.OnProblemIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Answer", DbType="Int")]
	public System.Nullable<int> Answer
	{
		get
		{
			return this._Answer;
		}
		set
		{
			if ((this._Answer != value))
			{
				this.OnAnswerChanging(value);
				this.SendPropertyChanging();
				this._Answer = value;
				this.SendPropertyChanged("Answer");
				this.OnAnswerChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Level]", Storage="_Level", DbType="Int NOT NULL")]
	public int Level
	{
		get
		{
			return this._Level;
		}
		set
		{
			if ((this._Level != value))
			{
				this.OnLevelChanging(value);
				this.SendPropertyChanging();
				this._Level = value;
				this.SendPropertyChanged("Level");
				this.OnLevelChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Round", DbType="Int NOT NULL")]
	public int Round
	{
		get
		{
			return this._Round;
		}
		set
		{
			if ((this._Round != value))
			{
				this.OnRoundChanging(value);
				this.SendPropertyChanging();
				this._Round = value;
				this.SendPropertyChanged("Round");
				this.OnRoundChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AddSubProblems")]
public partial class AddSubProblem : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _AddSubProblemID;
	
	private int _Level;
	
	private int _Operator1;
	
	private int _Operator2;
	
	private int _Result;
	
	private global::ProblemType _ProblemType;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAddSubProblemIDChanging(int value);
    partial void OnAddSubProblemIDChanged();
    partial void OnLevelChanging(int value);
    partial void OnLevelChanged();
    partial void OnOperator1Changing(int value);
    partial void OnOperator1Changed();
    partial void OnOperator2Changing(int value);
    partial void OnOperator2Changed();
    partial void OnResultChanging(int value);
    partial void OnResultChanged();
    partial void OnProblemTypeChanging(global::ProblemType value);
    partial void OnProblemTypeChanged();
    #endregion
	
	public AddSubProblem()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AddSubProblemID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int AddSubProblemID
	{
		get
		{
			return this._AddSubProblemID;
		}
		set
		{
			if ((this._AddSubProblemID != value))
			{
				this.OnAddSubProblemIDChanging(value);
				this.SendPropertyChanging();
				this._AddSubProblemID = value;
				this.SendPropertyChanged("AddSubProblemID");
				this.OnAddSubProblemIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Level]", Storage="_Level", DbType="Int NOT NULL")]
	public int Level
	{
		get
		{
			return this._Level;
		}
		set
		{
			if ((this._Level != value))
			{
				this.OnLevelChanging(value);
				this.SendPropertyChanging();
				this._Level = value;
				this.SendPropertyChanged("Level");
				this.OnLevelChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Operator1", DbType="Int NOT NULL")]
	public int Operator1
	{
		get
		{
			return this._Operator1;
		}
		set
		{
			if ((this._Operator1 != value))
			{
				this.OnOperator1Changing(value);
				this.SendPropertyChanging();
				this._Operator1 = value;
				this.SendPropertyChanged("Operator1");
				this.OnOperator1Changed();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Operator2", DbType="Int NOT NULL")]
	public int Operator2
	{
		get
		{
			return this._Operator2;
		}
		set
		{
			if ((this._Operator2 != value))
			{
				this.OnOperator2Changing(value);
				this.SendPropertyChanging();
				this._Operator2 = value;
				this.SendPropertyChanged("Operator2");
				this.OnOperator2Changed();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Result", DbType="Int NOT NULL")]
	public int Result
	{
		get
		{
			return this._Result;
		}
		set
		{
			if ((this._Result != value))
			{
				this.OnResultChanging(value);
				this.SendPropertyChanging();
				this._Result = value;
				this.SendPropertyChanged("Result");
				this.OnResultChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProblemType", DbType="Int NOT NULL", CanBeNull=false)]
	public global::ProblemType ProblemType
	{
		get
		{
			return this._ProblemType;
		}
		set
		{
			if ((this._ProblemType != value))
			{
				this.OnProblemTypeChanging(value);
				this.SendPropertyChanging();
				this._ProblemType = value;
				this.SendPropertyChanged("ProblemType");
				this.OnProblemTypeChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}
#pragma warning restore 1591